# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: suiyi_tag.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='suiyi_tag.proto',
  package='tagserver',
  syntax='proto3',
  serialized_pb=_b('\n\x0fsuiyi_tag.proto\x12\ttagserver\"\x1d\n\nTagRequest\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\t\"\x1e\n\x0bTagResponse\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\t2C\n\tTagServer\x12\x36\n\x03Tag\x12\x15.tagserver.TagRequest\x1a\x16.tagserver.TagResponse\"\x00\x42\x32\n\x17io.grpc.suiyi.tagserverB\x0eTagServerProtoP\x01\xa2\x02\x04TAGSb\x06proto3')
)




_TAGREQUEST = _descriptor.Descriptor(
  name='TagRequest',
  full_name='tagserver.TagRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='tagserver.TagRequest.content', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=59,
)


_TAGRESPONSE = _descriptor.Descriptor(
  name='TagResponse',
  full_name='tagserver.TagResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='tagserver.TagResponse.content', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=61,
  serialized_end=91,
)

DESCRIPTOR.message_types_by_name['TagRequest'] = _TAGREQUEST
DESCRIPTOR.message_types_by_name['TagResponse'] = _TAGRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TagRequest = _reflection.GeneratedProtocolMessageType('TagRequest', (_message.Message,), dict(
  DESCRIPTOR = _TAGREQUEST,
  __module__ = 'suiyi_tag_pb2'
  # @@protoc_insertion_point(class_scope:tagserver.TagRequest)
  ))
_sym_db.RegisterMessage(TagRequest)

TagResponse = _reflection.GeneratedProtocolMessageType('TagResponse', (_message.Message,), dict(
  DESCRIPTOR = _TAGRESPONSE,
  __module__ = 'suiyi_tag_pb2'
  # @@protoc_insertion_point(class_scope:tagserver.TagResponse)
  ))
_sym_db.RegisterMessage(TagResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\027io.grpc.suiyi.tagserverB\016TagServerProtoP\001\242\002\004TAGS'))

_TAGSERVER = _descriptor.ServiceDescriptor(
  name='TagServer',
  full_name='tagserver.TagServer',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=93,
  serialized_end=160,
  methods=[
  _descriptor.MethodDescriptor(
    name='Tag',
    full_name='tagserver.TagServer.Tag',
    index=0,
    containing_service=None,
    input_type=_TAGREQUEST,
    output_type=_TAGRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TAGSERVER)

DESCRIPTOR.services_by_name['TagServer'] = _TAGSERVER

# @@protoc_insertion_point(module_scope)
